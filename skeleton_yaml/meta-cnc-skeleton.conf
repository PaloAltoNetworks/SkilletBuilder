# skillet preamble information used by panhandler
# ---------------------------------------------------------------------
# unique snippet name
name: {{ skillet_name }}
# label used for menu selection
label: {{ skillet_label }}
description: {{ skillet_description }}

# type of device configuration
# common types are panorama, panos, and template
# https://github.com/PaloAltoNetworks/panhandler/blob/develop/docs/metadata_configuration.rst
type: {{ skillet_type }}
# preload static or default-based templates
extends:

# grouping of like snippets for dynamic menu creation in panhandler
labels:
  collection:
    - {{ collection_name }}

# ---------------------------------------------------------------------
# end of preamble section

# variables section
# ---------------------------------------------------------------------
# variables used in the configuration templates
# type_hint defines the form field used by panhandler
# type_hints can be text, ip_address, or dropdown
variables:
  - name: hostname
    description: Firewall hostname
    default: myFirewall
    type_hint: text
  - name: choices
    description: sample dropdown list
    default: choices
    type_hint: dropdown
    dd_list:
      - key: option1
        value: option1
      - key: option2
        value: option2
  - name: snippets
    type_hint: hidden
    default: ''
{%- if skillet_type == 'rest' or skillet_type == 'python' %}
# sample variables that may be requires for device interaction
# for python often used as part of the args inputs
  - name: TARGET_IP
    description: Panorama IP
    default: 0.0.0.0
    type_hint: text
  - name: TARGET_PORT
    description: Panorama port
    default: 443
    type_hint: number
  - name: TARGET_USERNAME
    description: Username
    default: admin
    type_hint: text
  - name: TARGET_PASSWORD
    description: Password
    default: admin
    type_hint: password
{% endif }
# ---------------------------------------------------------------------
# end of variables section

# snippets section
# ---------------------------------------------------------------------
# snippets used for api configuration including xpath and element as file name
# files will load in the order listed
# NOTE: The following snippets are auto-generated and ordered automatically.
# Changing the content of the snippet may be necessary, but do NOT change the order
{%- if skillet_type == 'panos' or skillet_type == 'panorama' %}
{% if snippets is defined %}
# There is a variable called snippets that we can use to auto-generate this section for us
snippets:
{% for s in snippets %}
  - name: {{ s.name }}
    xpath: {{ s.xpath }}
    element: |-
        {{ s.element | indent(width=8) | e }}
{% endfor %}
{% else %}
snippets:
  - name: quick_name
    xpath: /config/devices/restofthe/xmltree
    # use file for external xml element files
    # use element for inline xml elements
    file: filename.xml
    element: |-
        <tag>text</tag>

{% endif %}
{% endif %}

{%- if skillet_type == 'rest' %}
# sample snippet section showing API key gen and a get zone request
# this would require TARGET_IP, TARGET_USERNAME, and TARGET_PASSWORD defined as variables
# TARGET_PORT could be added if non default ports are used
{% raw %}
  - name: key_gen
    path: https://{{ TARGET_IP }}/api/?type=keygen&user={{ TARGET_USERNAME }}&password={{ TARGET_PASSWORD }}
    output_type: xml
    outputs:
      - name: api_key
        capture_pattern: result/key

# get zone names
  - name: zone_list
    path: |
      https://{{ TARGET_IP }}/api/?type=config&action=set&action=complete&xpath=/config/devices/entry[@name='localhost.localdomain']
      /template/entry[@name='{{ sdwan_template }}']/config/devices/entry[@name='localhost.localdomain']/vsys/entry[@name='vsys1']/zone&key={{ api_key }}
    output_type: xml
    outputs:
      - name: zone_names
        capture_pattern: ./completions/completion//@value
{% endraw %}
{% endif %}
{%- if skillet_type == 'python' %}
# contextual name with name of the python file
# skeleton shows cli arg inputs; env and output from other skillets also supported
# examples at: https://github.com/nembery/Skillets/tree/master/python
  - name: content_update
    file: content_update.py
    input_type: cli
{% end if %}
{%- if skillet_type == 'template' %}
# contextual name with the name of the template file
  - name: test_output
    file: test_output.conf
{% endif %}
{%- if skillet_type == 'pan_validation' %}
# example output capture and test structure layout
  - name: device_config_file
    cmd: parse
    variable: config
    outputs:
      - name: ntp_servers
        capture_object: /config/devices/entry[@name='localhost.localdomain']/deviceconfig/system/ntp-servers

  - name: ntp_servers
    label: configure primary and secondary ntp servers
    test: |
      (
      ntp_servers | tag_present('primary-ntp-server.ntp-server-address')
      and ntp_servers | tag_present('secondary-ntp-server.ntp-server-address')
      )
    fail_message: |
      time server configuration is reccommended to ensure the firewall clock is in sync with external service and logging
      platforms.
    pass_message: recommended primary and secondary ntp servers are configured
    documentation_link: https://iron-skillet.readthedocs.io/en/docs_dev/viz_guide_panos.html#device-setup-services-services
{% endif %}
{%- if skillet_type == 'workflow' %}
# sample workflow structure with named skillets
# when conditional is used to determine if a skillet should be played
  - name: homeskillet_base_panos_v90_5fdbc623-2891-4937-a577-d0aea59065cc
# post step 1 validation to ensure last step dependencies are met
  - name: validate-HomeSkillet-step2-e2c42c6d-a896-4445-8528-fd55a401850b
# grab list of interfaces
  - name: get_interface_lists_812E106E-EF84-48CC-A2CB-96F9D7DA7296
    when: "'load_step2' in workflow_options"
{% endif %}
# ---------------------------------------------------------------------
# end of snippets section
